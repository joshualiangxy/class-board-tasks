// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cancel button should render error and not reset input fields if user is new 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <div>
    <h1>
      Welcome to Class Board Tasks!
    </h1>
    <p>
      Please enter your information to get started
    </p>
  </div>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <p
      className="form__error"
    >
      Please submit display name and student number
    </p>
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="robert"
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0000000A"
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`render should render SettingsModal 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`render should render SettingsModal with displayName and studentNum 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`render should render different text and disabled cancel button for new user 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <div>
    <h1>
      Welcome to Class Board Tasks!
    </h1>
    <p>
      Please enter your information to get started
    </p>
  </div>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        disabled={true}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`submit button should call startSetUserData and onRequestClose on valid submit 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <p
      className="form__error"
    >
      Please enter display name
    </p>
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name and incorrect format for student number 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <p
      className="form__error"
    >
      Please enter display name and student number
    </p>
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name and student number on submit 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <p
      className="form__error"
    >
      Please enter display name and student number
    </p>
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;

exports[`submit button should render error if invalid student number 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Settings
  </h1>
  <form
    className="form"
    onSubmit={[Function]}
  >
    <p
      className="form__error"
    >
      Please enter a valid student number
    </p>
    <input
      autoFocus={true}
      className="text-input"
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      className="text-input"
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <div>
      <button
        className="button button--norm button--right"
      >
        Submit
      </button>
      <button
        className="button button--norm"
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
    </div>
  </form>
</Modal>
`;
