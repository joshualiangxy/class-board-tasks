// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render should render SettingsModal 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`render should render SettingsModal with displayName and studentNum 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`render should render different text and disabled cancel button for new user 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <div>
    <h2>
      Welcome to Class Board Tasks!
    </h2>
    <h4>
      Please enter your information to get started
    </h4>
  </div>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <button>
      Submit
    </button>
    <button
      disabled={true}
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`submit button should call startSetUserData and onRequestClose on valid submit 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <p>
    Please enter display name
  </p>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value="A0123456B"
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name and incorrect format for student number 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <p>
    Please enter display name and student number
  </p>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`submit button should render error if empty display name and student number on submit 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <p>
    Please enter display name and student number
  </p>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;

exports[`submit button should render error if invalid student number 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  closeTimeoutMS={0}
  contentLabel="Settings"
  isOpen={false}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h2>
    Settings
  </h2>
  <p>
    Please enter a valid student number
  </p>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Display name (required)"
      type="text"
      value="michael"
    />
    <input
      onChange={[Function]}
      placeholder="Student number (required)"
      type="text"
      value=""
    />
    <button>
      Submit
    </button>
    <button
      onClick={[Function]}
      type="button"
    >
      Cancel
    </button>
  </form>
</Modal>
`;
