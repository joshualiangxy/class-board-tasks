// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`addUser should add the user if valid 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={true}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Group Settings
  </h1>
  <div>
    <form
      className="form"
      onSubmit={[Function]}
    >
      <input
        autoFocus={true}
        className="text-input"
        onChange={[Function]}
        placeholder="Email (required)"
        type="text"
        value=""
      />
      <p
        className="form__error"
      >
        Added!
      </p>
      <div>
        <button
          className="button button--norm"
        >
          Add to list
        </button>
         
        <button
          className="button button--norm"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </form>
    <h2>
      Users:
    </h2>
    <Connect(GroupUserListing)
      admin={true}
      group="72b6b3bb-cb74-4d08-ae67-dfc1b51baaf9"
      kickUserLocal={[MockFunction]}
      setAdmin={[MockFunction]}
      setError={[Function]}
      setUsers={
        [MockFunction] {
          "calls": Array [
            Array [
              Array [
                Object {
                  "admin": true,
                  "displayName": "Robert",
                  "studentNum": "A0123456A",
                  "uid": "testuid",
                },
                Object {
                  "admin": false,
                  "displayName": "Peter",
                  "studentNum": "A0000000A",
                  "uid": "testuid2",
                },
                Object {
                  "admin": false,
                  "displayName": "michael",
                  "studentNum": "A0123456B",
                  "uid": "testuid",
                },
              ],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": true,
            },
          ],
        }
      }
      uid="testuid"
      users={
        Array [
          Object {
            "admin": true,
            "displayName": "Robert",
            "studentNum": "A0123456A",
            "uid": "testuid",
          },
          Object {
            "admin": false,
            "displayName": "Peter",
            "studentNum": "A0000000A",
            "uid": "testuid2",
          },
        ]
      }
    />
  </div>
</Modal>
`;

exports[`addUser should set the error for invalid users (with valid email) 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={true}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Group Settings
  </h1>
  <div>
    <form
      className="form"
      onSubmit={[Function]}
    >
      <input
        autoFocus={true}
        className="text-input"
        onChange={[Function]}
        placeholder="Email (required)"
        type="text"
        value="123124"
      />
      <p
        className="form__error"
      >
        No user found
      </p>
      <div>
        <button
          className="button button--norm"
        >
          Add to list
        </button>
         
        <button
          className="button button--norm"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </form>
    <h2>
      Users:
    </h2>
    <Connect(GroupUserListing)
      admin={true}
      group="72b6b3bb-cb74-4d08-ae67-dfc1b51baaf9"
      kickUserLocal={[MockFunction]}
      setAdmin={[MockFunction]}
      setError={[Function]}
      setUsers={[MockFunction]}
      uid="testuid"
      users={
        Array [
          Object {
            "admin": true,
            "displayName": "Robert",
            "studentNum": "A0123456A",
            "uid": "testuid",
          },
          Object {
            "admin": false,
            "displayName": "Peter",
            "studentNum": "A0000000A",
            "uid": "testuid2",
          },
        ]
      }
    />
  </div>
</Modal>
`;

exports[`render should render for admins 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={true}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Group Settings
  </h1>
  <div>
    <form
      className="form"
      onSubmit={[Function]}
    >
      <input
        autoFocus={true}
        className="text-input"
        onChange={[Function]}
        placeholder="Email (required)"
        type="text"
        value=""
      />
      <div>
        <button
          className="button button--norm"
        >
          Add to list
        </button>
         
        <button
          className="button button--norm"
          onClick={[Function]}
        >
          Cancel
        </button>
      </div>
    </form>
    <h2>
      Users:
    </h2>
    <Connect(GroupUserListing)
      admin={true}
      group="72b6b3bb-cb74-4d08-ae67-dfc1b51baaf9"
      kickUserLocal={[MockFunction]}
      setAdmin={[MockFunction]}
      setError={[Function]}
      setUsers={[MockFunction]}
      uid="testuid"
      users={
        Array [
          Object {
            "admin": true,
            "displayName": "Robert",
            "studentNum": "A0123456A",
            "uid": "testuid",
          },
          Object {
            "admin": false,
            "displayName": "Peter",
            "studentNum": "A0000000A",
            "uid": "testuid2",
          },
        ]
      }
    />
  </div>
</Modal>
`;

exports[`render should render for non-admins 1`] = `
<Modal
  appElement={null}
  ariaHideApp={true}
  bodyOpenClassName="ReactModal__Body--open"
  className="setting-modal"
  closeTimeoutMS={200}
  contentLabel="Settings"
  isOpen={true}
  onRequestClose={[Function]}
  parentSelector={[Function]}
  portalClassName="ReactModalPortal"
  role="dialog"
  shouldCloseOnEsc={true}
  shouldCloseOnOverlayClick={true}
  shouldFocusAfterRender={true}
  shouldReturnFocusAfterClose={true}
>
  <h1>
    Group Settings
  </h1>
  <div>
    <button
      className="button button--norm"
      onClick={[Function]}
    >
      Close
    </button>
    <h2>
      Users:
    </h2>
    <Connect(GroupUserListing)
      admin={false}
      group="72b6b3bb-cb74-4d08-ae67-dfc1b51baaf9"
      kickUserLocal={[MockFunction]}
      setAdmin={[MockFunction]}
      setError={[Function]}
      setUsers={[MockFunction]}
      uid="testuid"
      users={
        Array [
          Object {
            "admin": true,
            "displayName": "Robert",
            "studentNum": "A0123456A",
            "uid": "testuid",
          },
          Object {
            "admin": false,
            "displayName": "Peter",
            "studentNum": "A0000000A",
            "uid": "testuid2",
          },
        ]
      }
    />
  </div>
</Modal>
`;
